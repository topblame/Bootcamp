package kr.soldesk;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRichTextString;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;

public class ExcelDAO {
	private List<ExcelVO> list; //ExcelVO 객체
	private HSSFWorkbook wb;// 엑셀파일 생성객체
	
	public ExcelDAO() {
		list =new ArrayList<ExcelVO>();
		wb = new HSSFWorkbook();//파일
	}
	
	public void excel_input() {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		try {	
			 HSSFSheet firstSheet = wb.createSheet("Book Sheet");
	         // row
	         HSSFRow rowA = firstSheet.createRow(0);
	         // cell 책제목, 저자, 출판사, isbn, 이미지 이름, 이미지
	         HSSFCell cellA = rowA.createCell(0);
	         cellA.setCellValue(new HSSFRichTextString("책제목"));
	         HSSFCell cellB = rowA.createCell(1);
	         cellB.setCellValue(new HSSFRichTextString("저자"));
	         HSSFCell cellC = rowA.createCell(2);
	         cellC.setCellValue(new HSSFRichTextString("출판사"));
	         HSSFCell cellD = rowA.createCell(3);
	         cellD.setCellValue(new HSSFRichTextString("isbn"));
	         HSSFCell cellE = rowA.createCell(4);
	         cellE.setCellValue(new HSSFRichTextString("이미지이름"));
	         HSSFCell cellF = rowA.createCell(5);
	         cellF.setCellValue(new HSSFRichTextString("이미지"));
	
	         int i = 1;
	         while (true) {
	            System.out.print("책제목:");
	            String title = br.readLine();
	            System.out.print("책저자:");
	            String author = br.readLine();
	            System.out.print("출판사:");
	            String company = br.readLine();
	
	            HSSFRow rowRal = firstSheet.createRow(i);
	
	            HSSFCell cellTitle = rowRal.createCell(0);
	            cellTitle.setCellValue(new HSSFRichTextString(title));
	            HSSFCell cellAuthor = rowRal.createCell(1);
	            cellAuthor.setCellValue(new HSSFRichTextString(author));
	            HSSFCell cellCompany = rowRal.createCell(2);
	            cellCompany.setCellValue(new HSSFRichTextString(company));
	            i++;
	
	            ExcelVO vo = new ExcelVO(title, author, company);
	            // isbn, image 검색
	            ExcelVO data = naver_search(vo);
	            list.add(data);
	            System.out.print("계속입력 하시려면 Y/ 입력종료 N: ");
	            String key = br.readLine();
	            if (key.equals("N"))
	               break;
	         }
	         System.out.println("데이터 추출중.....");
	         excel_save(); // 저장
	      } catch (Exception e) {
	         e.printStackTrace();
	      }
	}
	public ExcelVO naver_search(ExcelVO vo) {
		try {
			
		} catch (Exception e) {
			// TODO: handle exception
		}
	}//naver_search
	
	//액셀에 저장
	public void excel_save() {
		try {
			HSSFSheet sheet = wb.getSheetAt(0);
		} catch (Exception e) {
			// TODO: handle exception
		}
	}
}
